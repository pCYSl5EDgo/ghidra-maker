name: Create ALF File

on: 
  watch:
    types: [started]
  
jobs:
  mingw:
    runs-on: ubuntu-20.04
    steps:
    - run: |
        sudo apt install mingw-w64
        x86_64-w64-mingw32-gcc --version
  build-linux: 
    if: 1 == 0
    runs-on: ubuntu-20.04
    steps:
    - run: |
        mkdir ~/git
        cd ~/git
        git clone https://github.com/NationalSecurityAgency/ghidra.git
        cd ~/git/ghidra
        gradle --init-script gradle/support/fetchDependencies.gradle init
    - run: |
        cd ~/git/ghidra
        gradle buildGhidra
    - uses: actions/upload-artifact@master
      with:
        path: ~/git/ghidra/build/dist/
        name: GhidraBuild
  build-win:
    runs-on: ubuntu-latest
    if: 1 == 0
    container: docker://gableroux/unity3d:${{ matrix.unity-tag }}
    strategy:
      matrix:
        unity-tag:
          - 2020.1.7f1-linux-il2cpp
          - 2019.4.11f1-linux-il2cpp
    steps:
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.300' # SDK
    - run: ls -l /github/home/.dotnet/
    - run: |
        mkdir outputFolder
        dotnet tool install ilspycmd -g
        /github/home/.dotnet/tools/ilspycmd "/opt/Unity/Editor/Data/il2cpp/build/deploy/net471/il2cpp.exe" -p -o outputFolder
    - run: ls -R -F outputFolder
    - uses: actions/upload-artifact@master
      with:
        path: outputFolder
        name: outputFolder${{ matrix.unity-tag }}
    - uses: actions/upload-artifact@master
      with:
        path: /opt/Unity/Editor/Data/il2cpp/build/deploy/net471
        name: inputFolder${{ matrix.unity-tag }}
